name: Deploy to Aliyun

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: blog
    steps:
      - name: Print secrets
        run: |
          echo "POSTGRES_USER: ${{ secrets.POSTGRES_USER }}"
          echo "POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}"
          echo "DATABASE_URL: ${{ secrets.DATABASE_URL }}"
          echo "NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}"
          echo "NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}"
          echo "NEXTAUTH_GITHUB_ID: ${{ secrets.NEXTAUTH_GITHUB_ID }}"
          echo "NEXTAUTH_GITHUB_SECRET: ${{ secrets.NEXTAUTH_GITHUB_SECRET }}"
          echo "SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}"
          echo "SERVER_HOST: ${{ secrets.SERVER_HOST }}"
          echo "SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      # 创建生产环境配置文件
      - name: Create env file
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env.production
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.production
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env.production
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env.production
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env.production
          echo "GITHUB_ID=${{ secrets.NEXTAUTH_GITHUB_ID }}" >> .env.production
          echo "GITHUB_SECRET=${{ secrets.NEXTAUTH_GITHUB_SECRET }}" >> .env.production

      - name: Deploy
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.SERVER_HOST }}
          REMOTE_USER: ${{ secrets.SERVER_USERNAME }}
          SOURCE: .
          TARGET: '/home/www/blog'
          ARGS: '-rlgoDzvc -i --delete'
